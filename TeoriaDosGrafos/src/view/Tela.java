/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import model.Edge;
import model.Node;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.CaminhoMinimo;
import model.Graph;
import model.Graphml;
import model.Kruskal;

/**
 *
 * @author Sujajeb
 */
public class Tela extends javax.swing.JDialog {

    java.awt.Frame pai;
    private DefaultTableModel tabela = new DefaultTableModel();
    private DefaultListModel model = new DefaultListModel();
    private ArrayList<Node> vertices = new ArrayList<Node>();
    private ArrayList<Edge> arestas = new ArrayList<Edge>();
    Graph graph = new Graph();
    Graphml graphml = new Graphml();
    XStream xstream = new XStream(new DomDriver());
    private String xml1 = null;
    private String choose = null;
    private String id, edgedefault;
    public CaminhoMinimo menorCaminho = new CaminhoMinimo();

    public Graph getGraph() {
        return graph;
    }

    public void setGraph(Graph graph) {
        this.graph = graph;
    }

    public String getXml1() {
        return xml1;
    }

    public void setXml1(String xml1) {
        this.xml1 = xml1;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getEdgedefault() {
        return edgedefault;
    }

    public void setEdgedefault(String edgedefault) {
        this.edgedefault = edgedefault;
    }

    public void setChoose(String choose) {
        this.choose = choose;
    }

    public String getChoose() {
        return choose;
    }

    /**
     * Creates new form FrmCadClienteModal
     */
    public Tela(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        pai = parent;
        xstream.omitField(Edge.class, "node1");
        xstream.omitField(Edge.class, "node2");
        xstream.omitField(Node.class, "grau");
        xstream.alias("graph", Graph.class);
        xstream.alias("node", Node.class);
        xstream.alias("edge", Edge.class);
        xstream.alias("graphml", Graphml.class);
        xstream.useAttributeFor("source", String.class);
        xstream.useAttributeFor("target", String.class);
        xstream.useAttributeFor("distancia", String.class);
        xstream.useAttributeFor("visitado", String.class);
        xstream.useAttributeFor("weight", String.class);
        xstream.useAttributeFor("xmlns", String.class);
        xstream.useAttributeFor("edgedefault", String.class);
        xstream.useAttributeFor("id", String.class);
        xstream.addImplicitArray(Graph.class, "nodes");
        xstream.addImplicitArray(Graph.class, "edge");
        initComponents();
        tabela.addColumn("Nome");
        tabela.addColumn("1º Vertice");
        tabela.addColumn("2º Vertice");
        tabela.addColumn("Peso");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        FileChooser = new javax.swing.JFileChooser();
        imagem = new javax.swing.JLabel();
        jtaEntrada = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaArestas = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        PainelAresta = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        listaNode02 = new javax.swing.JComboBox<>();
        listaNode01 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        CriarAresta = new javax.swing.JButton();
        EditarAresta = new javax.swing.JButton();
        removerAresta = new javax.swing.JButton();
        limparTextoAresta = new javax.swing.JButton();
        nomeAresta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        peso = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        PainelXML = new javax.swing.JPanel();
        abrirXML = new javax.swing.JButton();
        url = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        gerarXml = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        criarNo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nomeVertice = new javax.swing.JTextField();
        editarVertice = new javax.swing.JButton();
        removerVertice = new javax.swing.JButton();
        limparTextoVertice = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaVertices = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jPanelVertice = new javax.swing.JPanel();
        grau = new javax.swing.JButton();
        verticeGrau = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        incidente = new javax.swing.JButton();
        adjacente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        arestaIncidente = new javax.swing.JButton();
        arestaIncidente1 = new javax.swing.JButton();
        arestaGrau = new javax.swing.JTextField();
        ordemGrafo = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        MatrizAdjacencia = new javax.swing.JButton();
        listaAdjacencia = new javax.swing.JButton();
        conjunto = new javax.swing.JButton();
        matrizIncidencia = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        algoritmoDijkstra = new javax.swing.JMenuItem();
        Kruskal = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        FileChooser.setCurrentDirectory(new java.io.File("D:\\documentos\\xml"));
        FileChooser.setDialogTitle("Esta é minha caixa aberta");
        FileChooser.setFileFilter(new MyCustomFilter());
        FileChooser.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        imagem.setText("jLabel13");
        imagem.setPreferredSize(new java.awt.Dimension(400, 400));

        jtaEntrada.setColumns(20);
        jtaEntrada.setRows(5);
        jtaEntrada.setText("digraph G {\n     a -> b -> c;\n     b -> d [label=\"0.2\",color=red,penwidth=3.0 ];\n     d -> a;\n }");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de alunos");
        setBackground(new java.awt.Color(255, 255, 204));

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel3.setText("Cadastro de Vertices e Arestas");

        tabelaArestas.setAutoCreateRowSorter(true);
        tabelaArestas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelaArestas.setFont(tabelaArestas.getFont().deriveFont((tabelaArestas.getFont().getStyle() | java.awt.Font.ITALIC) | java.awt.Font.BOLD, tabelaArestas.getFont().getSize()+7));
        tabelaArestas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME", "1º VERTICE", "2º VERTICE", "PESO"
            }
        ));
        tabelaArestas.setGridColor(new java.awt.Color(102, 102, 102));
        tabelaArestas.getTableHeader().setResizingAllowed(false);
        tabelaArestas.getTableHeader().setReorderingAllowed(false);
        tabelaArestas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaArestasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaArestas);

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel9.setText("Lista de Arestas");

        PainelAresta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel7.setText("Selecione os Vertices da Aresta");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel5.setText("2º Nó ");

        listaNode02.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaNode02MouseClicked(evt);
            }
        });

        listaNode01.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaNode01MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel4.setText("1º Nó ");

        CriarAresta.setBackground(new java.awt.Color(153, 153, 255));
        CriarAresta.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        CriarAresta.setText("Criar Aresta");
        CriarAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CriarArestaActionPerformed(evt);
            }
        });

        EditarAresta.setBackground(new java.awt.Color(255, 255, 204));
        EditarAresta.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        EditarAresta.setText("Editar");
        EditarAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        removerAresta.setBackground(new java.awt.Color(255, 102, 102));
        removerAresta.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        removerAresta.setText("Remover");
        removerAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerArestaActionPerformed(evt);
            }
        });

        limparTextoAresta.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        limparTextoAresta.setText("Limpar");
        limparTextoAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparTextoArestaActionPerformed(evt);
            }
        });

        nomeAresta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nomeArestaMouseClicked(evt);
            }
        });

        jLabel2.setText("Nome da Aresta");

        jLabel13.setText("Peso da Aresta");

        javax.swing.GroupLayout PainelArestaLayout = new javax.swing.GroupLayout(PainelAresta);
        PainelAresta.setLayout(PainelArestaLayout);
        PainelArestaLayout.setHorizontalGroup(
            PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelArestaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelArestaLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelArestaLayout.createSequentialGroup()
                        .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelArestaLayout.createSequentialGroup()
                                .addComponent(EditarAresta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(limparTextoAresta)
                                .addGap(31, 31, 31)
                                .addComponent(removerAresta))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelArestaLayout.createSequentialGroup()
                                .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(29, 29, 29)
                                .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(listaNode01, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(listaNode02, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PainelArestaLayout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(nomeAresta, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                            .addComponent(peso)))
                                    .addGroup(PainelArestaLayout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addComponent(jLabel13)))))
                        .addGap(37, 37, 37))))
            .addGroup(PainelArestaLayout.createSequentialGroup()
                .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelArestaLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PainelArestaLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(CriarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PainelArestaLayout.setVerticalGroup(
            PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelArestaLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(listaNode01, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(PainelArestaLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(nomeAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelArestaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listaNode02, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(PainelArestaLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CriarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PainelArestaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditarAresta)
                    .addComponent(limparTextoAresta)
                    .addComponent(removerAresta))
                .addContainerGap())
        );

        PainelArestaLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {EditarAresta, limparTextoAresta, removerAresta});

        PainelXML.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        abrirXML.setBackground(new java.awt.Color(255, 255, 204));
        abrirXML.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        abrirXML.setText("Abrir XML");
        abrirXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirXMLActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel6.setText("Local do Arquivo");

        gerarXml.setBackground(new java.awt.Color(204, 255, 204));
        gerarXml.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        gerarXml.setText("Gerar XML");
        gerarXml.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerarXmlActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jButton1.setText("Gerar Imagem ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelXMLLayout = new javax.swing.GroupLayout(PainelXML);
        PainelXML.setLayout(PainelXMLLayout);
        PainelXMLLayout.setHorizontalGroup(
            PainelXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelXMLLayout.createSequentialGroup()
                .addGroup(PainelXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelXMLLayout.createSequentialGroup()
                        .addGroup(PainelXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelXMLLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(abrirXML)
                                .addGap(18, 18, 18)
                                .addComponent(gerarXml))
                            .addGroup(PainelXMLLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(url, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(PainelXMLLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PainelXMLLayout.setVerticalGroup(
            PainelXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelXMLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelXMLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(abrirXML, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gerarXml, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        criarNo.setBackground(new java.awt.Color(153, 153, 255));
        criarNo.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        criarNo.setText("Criar Vértice");
        criarNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarNoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Nome do Vértice:");

        editarVertice.setBackground(new java.awt.Color(255, 255, 204));
        editarVertice.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        editarVertice.setText("Editar");
        editarVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarVerticeActionPerformed(evt);
            }
        });

        removerVertice.setBackground(new java.awt.Color(255, 102, 102));
        removerVertice.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        removerVertice.setText("Remover");
        removerVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerVerticeActionPerformed(evt);
            }
        });

        limparTextoVertice.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        limparTextoVertice.setText("Limpar");
        limparTextoVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparTextoVerticeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(removerVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(limparTextoVertice, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                        .addComponent(editarVertice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(criarNo, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(nomeVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {criarNo, editarVertice, limparTextoVertice, removerVertice});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nomeVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(criarNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(limparTextoVertice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editarVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removerVertice)
                .addGap(81, 81, 81))
        );

        listaVertices.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        listaVertices.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaVerticesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaVertices);

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel8.setText("Lista de Vertices");

        jPanelVertice.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        grau.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        grau.setText("GRAU ");
        grau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grauActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 8)); // NOI18N
        jLabel10.setText("DEIXE EM BRANCO PARA TODOS");

        incidente.setFont(new java.awt.Font("Tahoma", 3, 10)); // NOI18N
        incidente.setText("INCIDENTES");
        incidente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incidenteActionPerformed(evt);
            }
        });

        adjacente.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        adjacente.setText("ADJACENTES");
        adjacente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adjacenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelVerticeLayout = new javax.swing.GroupLayout(jPanelVertice);
        jPanelVertice.setLayout(jPanelVerticeLayout);
        jPanelVerticeLayout.setHorizontalGroup(
            jPanelVerticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVerticeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelVerticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelVerticeLayout.createSequentialGroup()
                        .addComponent(grau, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(incidente))
                    .addGroup(jPanelVerticeLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanelVerticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelVerticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelVerticeLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(verticeGrau, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(adjacente, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelVerticeLayout.setVerticalGroup(
            jPanelVerticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelVerticeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelVerticeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(incidente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grau, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(adjacente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(verticeGrau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(16, 16, 16))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        arestaIncidente.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        arestaIncidente.setText("INCIDENTE");
        arestaIncidente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arestaIncidenteActionPerformed(evt);
            }
        });

        arestaIncidente1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        arestaIncidente1.setText("ADJACENTE");
        arestaIncidente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arestaAdjacenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(arestaIncidente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(arestaIncidente1)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(arestaGrau, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arestaIncidente1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arestaIncidente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arestaGrau, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {arestaIncidente, arestaIncidente1});

        ordemGrafo.setBackground(new java.awt.Color(153, 153, 255));
        ordemGrafo.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        ordemGrafo.setText("ORDEM DO GRAFO");
        ordemGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordemGrafoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel11.setText("VERTICES");

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel12.setText("ARESTAS");

        MatrizAdjacencia.setText("Matriz de adjacências");
        MatrizAdjacencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MatrizAdjacenciaActionPerformed(evt);
            }
        });

        listaAdjacencia.setText("Lista de adjacência");
        listaAdjacencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaAdjacenciaActionPerformed(evt);
            }
        });

        conjunto.setText("Conjunto");
        conjunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conjuntoActionPerformed(evt);
            }
        });

        matrizIncidencia.setText("Matriz de incidência");
        matrizIncidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrizIncidenciaActionPerformed(evt);
            }
        });

        jMenu1.setText("Algoritmo");

        algoritmoDijkstra.setText("Dijkstra");
        algoritmoDijkstra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algoritmoDijkstraActionPerformed(evt);
            }
        });
        jMenu1.add(algoritmoDijkstra);

        Kruskal.setText("Kruskal");
        Kruskal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KruskalActionPerformed(evt);
            }
        });
        jMenu1.add(Kruskal);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(168, 168, 168)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jPanelVertice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(2, 2, 2))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addComponent(ordemGrafo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(92, 92, 92)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MatrizAdjacencia, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(matrizIncidencia)
                                .addGap(18, 18, 18)
                                .addComponent(conjunto, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(listaAdjacencia, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(PainelAresta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PainelXML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PainelAresta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(PainelXML, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanelVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(ordemGrafo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel12)
                            .addGap(1, 1, 1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MatrizAdjacencia)
                    .addComponent(listaAdjacencia)
                    .addComponent(conjunto)
                    .addComponent(matrizIncidencia))
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CriarArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CriarArestaActionPerformed
        // TODO add your handling code here:
        Edge aresta = new Edge();
        aresta.setId(nomeAresta.getText());
        aresta.setWeight(Integer.parseInt(peso.getText()));
        aresta.setNode1(vertices.get(listaNode01.getSelectedIndex()));
        aresta.setNode2(vertices.get(listaNode02.getSelectedIndex()));
        tabelaArestas.setModel(tabela);
        tabela.addRow(new Object[]{nomeAresta.getText(), aresta.getNode1().getId(), aresta.getNode2().getId(), aresta.getWeight()});
        arestas.add(aresta);
        nomeAresta.setText("");
        peso.setText(null);
    }//GEN-LAST:event_CriarArestaActionPerformed

    private void limparTextoArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparTextoArestaActionPerformed
        // TODO add your handling code here:
        nomeAresta.setText("");
        nomeAresta.setText("");
    }//GEN-LAST:event_limparTextoArestaActionPerformed

    private void removerArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerArestaActionPerformed
        // TODO add your handling code here:
        int index = tabelaArestas.getSelectedRow();
        if ((tabela.getRowCount() > 0) && (index >= 0)) {
            arestas.remove(index);
            Object remove;
            remove = tabela.getValueAt(index, 0);
            tabela.removeRow(index);
            nomeAresta.setText("");
            nomeAresta.setText("");
            JOptionPane.showMessageDialog(null, remove.toString() + " foi removido com sucesso ");

        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma aresta ");
        }
    }//GEN-LAST:event_removerArestaActionPerformed

    private void listaNode01MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaNode01MouseClicked
        // TODO add your handling code here:
        listaNode01.removeAllItems();
        for (Node obj : vertices) {
            listaNode01.addItem(obj.getId());
    }//GEN-LAST:event_listaNode01MouseClicked
    }
    private void tabelaArestasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaArestasMouseClicked
        // TODO add your handling code here:
        int index = tabelaArestas.getSelectedRow();
        if ((tabela.getRowCount() > 0) && (index >= 0)) {
            nomeAresta.setText(arestas.get(index).getId());
            arestaGrau.setText(arestas.get(index).getId());
            peso.setText(String.valueOf(arestas.get(index).getWeight()));
            listaNode01.removeAllItems();
            listaNode02.removeAllItems();
            listaNode01.addItem(arestas.get(index).getNode1().getId());
            listaNode02.addItem(arestas.get(index).getNode2().getId());
        }

    }//GEN-LAST:event_tabelaArestasMouseClicked

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        // TODO add your handling code here:
        int index = tabelaArestas.getSelectedRow();
        if ((tabela.getRowCount() > 0) && (index >= 0)) {
            arestas.get(index).setNode1(vertices.get(listaNode01.getSelectedIndex()));
            arestas.get(index).setNode2(vertices.get(listaNode02.getSelectedIndex()));
            arestas.get(index).setWeight(Integer.parseInt(peso.getText()));
            // arestas.get(index).setNome(id);
            tabela.removeRow(index);
            tabela.insertRow(index, new String[]{nomeAresta.getText(), arestas.get(index).getNode1().getId(), arestas.get(index).getNode2().getId(), String.valueOf(arestas.get(index).getWeight())});
            nomeAresta.setText("");
            arestaGrau.setText("");
            peso.setText("");
            Object edit;
            edit = tabela.getValueAt(index, 0);
            JOptionPane.showMessageDialog(null, "A Aresta " + edit.toString() + " foi editado com sucesso ");
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma aresta ");
        }
    }//GEN-LAST:event_editarActionPerformed

    private void gerarXmlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarXmlActionPerformed
        // TODO add your handling code here:
        graph.setNodes(vertices);
        graph.setEdge(arestas);
        graph.setEdgedefault(edgedefault);
        graph.setId(id);
        graphml.setGraph(graph);
        JFileChooser arquivo = new JFileChooser();
        FileNameExtensionFilter filtroXML = new FileNameExtensionFilter("Arquivos XML", "xml");
        arquivo.addChoosableFileFilter(filtroXML);
        arquivo.setAcceptAllFileFilterUsed(false);
        if (arquivo.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            url.setText(arquivo.getSelectedFile().getAbsolutePath());
            choose = url.getText();
        }

        try {
            xml1 = xstream.toXML(graphml);
            System.out.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + xml1);
            File file = new File(choose + ".xml");
            PrintWriter print = new PrintWriter(file);
            print.write(xml1);
            print.flush();
            print.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gerarXmlActionPerformed

    private void abrirXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirXMLActionPerformed
        JFileChooser arquivo = new JFileChooser();
        FileNameExtensionFilter filtroXML = new FileNameExtensionFilter("Arquivos XML", "xml");
        arquivo.addChoosableFileFilter(filtroXML);
        arquivo.setAcceptAllFileFilterUsed(false);
        if (arquivo.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            url.setText(arquivo.getSelectedFile().getAbsolutePath());
            choose = url.getText();
            try {
                // TODO add your handling code here:
                FileReader leitor = new FileReader(choose);
                //XStream xstream = new XStream(new DomDriver());
                graphml = null;
                graphml = (Graphml) xstream.fromXML(leitor);
                ArrayList lst = graphml.getGraph().getEdge();
                graphml.getGraph().setNodes(new ArrayList<Node>());
                graphml.getGraph().setEdge(new ArrayList<Edge>());
                for (Object e : lst) {
                    if (e instanceof Node) {
                        graphml.getGraph().getNodes().add((Node) e);
                    } else {
                        graphml.getGraph().getEdge().add((Edge) e);
                    }
                }

                for (Edge aresta : graphml.getGraph().getEdge()) {
                    for (Node no : graphml.getGraph().getNodes()) {
                        if (no.getId().equals(aresta.getSource())) {
                            aresta.setNode1(no);
                        }
                        if (no.getId().equals(aresta.getTarget())) {
                            aresta.setNode2(no);
                        }
                    }
                }
                vertices = (ArrayList<Node>) graphml.getGraph().getNodes();
                arestas = (ArrayList<Edge>) graphml.getGraph().getEdge();
                graph.setEdge(arestas);
                graph.setNodes(vertices);
                this.tabelaArestas.setModel(tabela);
                this.listaVertices.setModel(model);
                while (tabela.getRowCount() > 0) {
                    tabela.removeRow(0);
                }
                for (Edge inserir : graphml.getGraph().getEdge()) {
                    tabela.addRow(new String[]{inserir.getId(), inserir.getSource(), inserir.getTarget(), String.valueOf(inserir.getWeight())});
                }
                model.removeAllElements();
                for (Node vertice : graphml.getGraph().getNodes()) {

                    model.addElement(vertice.getId());
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_abrirXMLActionPerformed

    private void criarNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarNoActionPerformed
        // TODO add your handling code here:
        Node no = new Node();
        listaVertices.setModel(model);
        model.removeAllElements();
        if (nomeVertice.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Selecione um nome para o Vértice ");
        } else {
            no.setId(nomeVertice.getText());
            vertices.add(no);

        }
        nomeVertice.setText("");
        for (Node vertice : vertices) {
            model.addElement(vertice.getId());
        }
    }//GEN-LAST:event_criarNoActionPerformed

    private void editarVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarVerticeActionPerformed
        // TODO add your handling code here:        
        int index = listaVertices.getSelectedIndex();
        if ((vertices.size() > 0) && (index >= 0)) {
            String nome = nomeVertice.getText();
            if (nome.equals("")) {
                JOptionPane.showMessageDialog(null, "Selecione um nome para o Vértice ");
            } else {
                vertices.get(index).setId(nome);
                for (Edge aresta : arestas) {
                    if (aresta.getNode1().equals(vertices.get(index))) {
                        aresta.setId(nome + aresta.getNode2().getId());
                    }
                    if (aresta.getNode2().equals(vertices.get(index))) {
                        aresta.setId(aresta.getNode1().getId() + nome);
                    }

                }
                nomeVertice.setText("");
                verticeGrau.setText(null);

                JOptionPane.showMessageDialog(null, "O Vertice " + nome + " foi editado com sucesso ");
                model.removeAllElements();

                for (Node vertice : vertices) {
                    model.addElement(vertice.getId());
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma Vertice ");
        }
    }//GEN-LAST:event_editarVerticeActionPerformed

    private void listaVerticesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaVerticesMouseClicked
        // TODO add your handling code here:
        int index = listaVertices.getSelectedIndex();
        if (index >= 0) {
            nomeVertice.setText(vertices.get(index).getId());
            verticeGrau.setText(vertices.get(index).getId());
        }
    }//GEN-LAST:event_listaVerticesMouseClicked

    private void listaNode02MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaNode02MouseClicked
        // TODO add your handling code here:
        listaNode02.removeAllItems();
        for (Node obj : vertices) {
            listaNode02.addItem(obj.getId());
        }
    }//GEN-LAST:event_listaNode02MouseClicked

    private void removerVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerVerticeActionPerformed
        // TODO add your handling code here:
        int index = listaVertices.getSelectedIndex();
        int cont = 0, tam = arestas.size();
        if ((vertices.size() > 0) && (index >= 0)) {
            Object remove;
            remove = model.get(index).toString();
            model.remove(index);
            nomeVertice.setText("");
            while (cont < tam) {
                if (arestas.get(cont).getNode2().equals(vertices.get(index)) || arestas.get(cont).getNode1().equals(vertices.get(index))) {
                    arestas.remove(cont);
                    tabela.removeRow(cont);
                    cont = -1;
                    tam = arestas.size();
                }
                cont++;
            }
            JOptionPane.showMessageDialog(null, "O Vertice " + remove + " foi removido com sucesso ");
            vertices.remove(index);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Vertice ");
        }
    }//GEN-LAST:event_removerVerticeActionPerformed

    private void nomeArestaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nomeArestaMouseClicked
        // TODO add your handling code here:   

        int index01 = listaNode01.getSelectedIndex();
        int index02 = listaNode02.getSelectedIndex();
        String nome = (String) (vertices.get(index01).getId() + vertices.get(index02).getId());
        nomeAresta.setText(nome);
    }//GEN-LAST:event_nomeArestaMouseClicked

    private void limparTextoVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparTextoVerticeActionPerformed
        // TODO add your handling code here:
        nomeVertice.setText("");
    }//GEN-LAST:event_limparTextoVerticeActionPerformed

    private void ordemGrafoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordemGrafoActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "A ordem do Grafo " + this.id + " é " + vertices.size());
    }//GEN-LAST:event_ordemGrafoActionPerformed

    private void grauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grauActionPerformed
        // TODO add your handling code here:

        String selected = verticeGrau.getText();
        String grauTotal = graph.grauNo(graph, selected);

        JOptionPane.showMessageDialog(null, grauTotal);
        verticeGrau.setText(null);
        nomeVertice.setText(null);

    }//GEN-LAST:event_grauActionPerformed

    private void incidenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incidenteActionPerformed
        // TODO add your handling code here:
        String incidenciaTotal = "";
        if (verticeGrau.getText().equals("")) {
            for (Edge aresta : arestas) {
                incidenciaTotal += " Os Vertices " + aresta.getNode1().getId() + " e " + aresta.getNode2().getId() + " são incidente com a aresta " + aresta.getId() + "\n";
            }
        } else {

            for (Edge aresta : arestas) {
                if (aresta.getNode1().getId().equals(verticeGrau.getText()) || aresta.getNode2().getId().equals(verticeGrau.getText())) {
                    incidenciaTotal += " Os Vertices " + aresta.getNode1().getId() + " e " + aresta.getNode2().getId() + " são incidente com a aresta " + aresta.getId() + "\n";
                }
            }
        }
        JOptionPane.showMessageDialog(null, incidenciaTotal);
        verticeGrau.setText(null);
        nomeVertice.setText(null);
    }//GEN-LAST:event_incidenteActionPerformed

    private void adjacenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjacenteActionPerformed
        // TODO add your handling code here:
        String adjacenciaTotal = "";
        if (verticeGrau.getText().equals("")) {

            for (Edge aresta : arestas) {
                adjacenciaTotal += " Os Vertices " + aresta.getNode1().getId() + " e " + aresta.getNode2().getId() + " são adjacentes \n";
            }
        } else {

            for (Edge aresta : arestas) {
                if (aresta.getNode1().getId().equals(verticeGrau.getText()) || aresta.getNode2().getId().equals(verticeGrau.getText())) {
                    adjacenciaTotal += " Os Vertices " + aresta.getNode1().getId() + " e " + aresta.getNode2().getId() + "  são adjacentes \n";
                }
            }
        }
        JOptionPane.showMessageDialog(null, adjacenciaTotal);
        verticeGrau.setText(null);
        nomeVertice.setText(null);

    }//GEN-LAST:event_adjacenteActionPerformed

    private void arestaIncidenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arestaIncidenteActionPerformed
        // TODO add your handling code here:
        String incidenciaTotal = "";
        if (arestaGrau.getText().equals("")) {

            for (Edge aresta : arestas) {
                incidenciaTotal += " A aresta " + aresta.getId() + " é incidente no vértice " + aresta.getNode2().getId() + "\n";
            }
        } else {

            for (Edge aresta : arestas) {
                if (aresta.getNode1().getId().equals(arestaGrau.getText()) || aresta.getNode2().getId().equals(arestaGrau.getText())) {
                    incidenciaTotal += " Os Vertices " + aresta.getNode1().getId() + " e " + aresta.getNode2().getId() + " são incidente com a aresta " + aresta.getId() + "\n";
                }
            }
        }
        JOptionPane.showMessageDialog(null, incidenciaTotal);
        verticeGrau.setText(null);
        nomeVertice.setText(null);
    }//GEN-LAST:event_arestaIncidenteActionPerformed

    private void arestaAdjacenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arestaAdjacenteActionPerformed
        // TODO add your handling code here:
        String adjacenciaTotal = "", adjacenciaParcial = "";
        if (arestaGrau.getText().equals("")) {

            for (Node no : vertices) {
                adjacenciaParcial = "";
                int cont = 0;
                for (Edge aresta : arestas) {
                    if (no.equals(aresta.getNode1()) || no.equals(aresta.getNode2())) {
                        cont++;
                        adjacenciaParcial += " " + aresta.getId();
                    }
                }
                if (cont > 1) {
                    adjacenciaTotal += " \n As arestas " + adjacenciaParcial + " são adjacentes";
                }
            }
        } else {

            for (Edge aresta : arestas) {
                if (aresta.getNode1().getId().equals(arestaGrau.getText()) || aresta.getNode2().getId().equals(arestaGrau.getText())) {
                    adjacenciaTotal += " Os Vertices " + aresta.getNode1().getId() + " e " + aresta.getNode2().getId() + " são incidente com a aresta " + aresta.getId() + "\n";
                }
            }
        }
        JOptionPane.showMessageDialog(null, adjacenciaTotal);
        verticeGrau.setText(null);
        nomeVertice.setText(null);
    }//GEN-LAST:event_arestaAdjacenteActionPerformed

    private void MatrizAdjacenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MatrizAdjacenciaActionPerformed
        graph.setNodes(vertices);
        graph.setEdge(arestas);
        System.out.println(graph.matrizAdjacencia(graph));
        JOptionPane.showMessageDialog(null, graph.matrizAdjacencia(graph));
    }//GEN-LAST:event_MatrizAdjacenciaActionPerformed

    private void listaAdjacenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaAdjacenciaActionPerformed
        // TODO add your handling code here:
        graph.setNodes(vertices);
        graph.setEdge(arestas);
        System.out.println(graph.listaAdjacencia(graph));
        JOptionPane.showMessageDialog(null, graph.listaAdjacencia(graph));
    }//GEN-LAST:event_listaAdjacenciaActionPerformed

    private void matrizIncidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrizIncidenciaActionPerformed
        // TODO add your handling code here:
        graph.setNodes(vertices);
        graph.setEdge(arestas);
        System.out.println(graph.matrizIncidencia(graph));
        JOptionPane.showMessageDialog(null, graph.matrizIncidencia(graph));
    }//GEN-LAST:event_matrizIncidenciaActionPerformed

    private void conjuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conjuntoActionPerformed
        // TODO add your handling code here:
        graph.setNodes(vertices);
        graph.setEdge(arestas);
        System.out.println(graph.conjunto(graph));
        JOptionPane.showMessageDialog(null, graph.conjunto(graph));
    }//GEN-LAST:event_conjuntoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        graph.setNodes(vertices);
        graph.setEdge(arestas);
        String adjacenciaTotal = "digraph G {";
        for (Edge a : graph.getEdge()) {
            adjacenciaTotal += a.getSource() + " -> " + a.getTarget() + "[label=" + a.getWeight() + "];\n";

        }
//        adjacenciaTotal += graph.listaAdjacencia(graph);
        adjacenciaTotal += "}";

        Process p;
        File arquivo = new File("src\\os\\dot\\fileS.dot");
        try (FileWriter fw = new FileWriter(arquivo)) {
            fw.write(adjacenciaTotal);
            fw.flush();
            String commandLine = "C:\\Program Files (x86)\\Graphviz2.38\\bin\\dot -Tpng " + arquivo.getCanonicalPath() + " -o src\\os\\img\\fileS.png";
            p = Runtime.getRuntime().exec(commandLine);
            while (p.isAlive()) {
            }

            File arqImg = new File("src\\os\\img\\fileS.png");
            ImageIcon image = new ImageIcon(arqImg.getCanonicalPath());
            image.getImage().flush();
            imagem.setIcon(image);
            imagem.setText("");
            JOptionPane.showMessageDialog(null, null, "Imagem do grafo", 0, image);

        } catch (IOException ex) {
            System.out.println("Erro do Executar Comando: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void algoritmoDijkstraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algoritmoDijkstraActionPerformed
        // TODO add your handling code here:
        String idTarget = "", idSource = "", caminhoMinimo = "";
        List<Node> caminho = new ArrayList<Node>();
        Node target = null, source = null;
        idSource = JOptionPane.showInputDialog("digite o nó origem");
        idTarget = JOptionPane.showInputDialog("digite o nó alvo");
        for (Node no : graphml.getGraph().getNodes()) {
            if (no.getId().equals(idTarget)) {
                target = no;
            }
            if (no.getId().equals(idSource)) {
                source = no;
            }
        }
        if (target != null && source != null) {
            caminho = menorCaminho.encontrarMenorCaminhoDijkstra(graphml.getGraph(), source, target);
//            caminho = Dijkstra.findShortestPath(graph, source, target);
            for (Node no : caminho) {
                caminhoMinimo += " -> " + no.getId();
            }
            JOptionPane.showMessageDialog(null, caminhoMinimo);
        } else {
            JOptionPane.showConfirmDialog(null, "Este nó não existe");
    }//GEN-LAST:event_algoritmoDijkstraActionPerformed
    }
    private void KruskalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KruskalActionPerformed
        Kruskal kru = new Kruskal();
        graph.setNodes(vertices);
        graph.setEdge(arestas);
        kru.imprimeKruskal(graph);
    }//GEN-LAST:event_KruskalActionPerformed

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Tela dialog = new Tela(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });

    }

    class MyCustomFilter extends javax.swing.filechooser.FileFilter {

        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".xml");
        }

        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Text documents (*.xml)";
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CriarAresta;
    private javax.swing.JButton EditarAresta;
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JMenuItem Kruskal;
    private javax.swing.JButton MatrizAdjacencia;
    private javax.swing.JPanel PainelAresta;
    private javax.swing.JPanel PainelXML;
    private javax.swing.JButton abrirXML;
    private javax.swing.JButton adjacente;
    private javax.swing.JMenuItem algoritmoDijkstra;
    private javax.swing.JTextField arestaGrau;
    private javax.swing.JButton arestaIncidente;
    private javax.swing.JButton arestaIncidente1;
    private javax.swing.JButton conjunto;
    private javax.swing.JButton criarNo;
    private javax.swing.JButton editarVertice;
    private javax.swing.JButton gerarXml;
    private javax.swing.JButton grau;
    private javax.swing.JLabel imagem;
    private javax.swing.JButton incidente;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelVertice;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jtaEntrada;
    private javax.swing.JButton limparTextoAresta;
    private javax.swing.JButton limparTextoVertice;
    private javax.swing.JButton listaAdjacencia;
    private javax.swing.JComboBox<String> listaNode01;
    private javax.swing.JComboBox<String> listaNode02;
    private javax.swing.JList<String> listaVertices;
    private javax.swing.JButton matrizIncidencia;
    private javax.swing.JTextField nomeAresta;
    private javax.swing.JTextField nomeVertice;
    private javax.swing.JButton ordemGrafo;
    private javax.swing.JTextField peso;
    private javax.swing.JButton removerAresta;
    private javax.swing.JButton removerVertice;
    private javax.swing.JTable tabelaArestas;
    private javax.swing.JTextField url;
    private javax.swing.JTextField verticeGrau;
    // End of variables declaration//GEN-END:variables
}
